@page "/product/{id:int}"
@inject IProductService ProductService


@if(product == null)
{
    <div class="text-center">
  <div class="spinner-border" role="status">
    <span class="sr-only"></span>
  </div>
</div>
    <span>@message</span>
}
else
{
    <div class="media">
    <div class="media-img-wrapper mr-2">
        <img class="media-img" src="@product.ImageUrl" alt="@product.Title" />
    </div>
    <div class="media-body">
        <h2 class="mb-0">@product.Title</h2>
        <p>@product.Description</p>
        <h4 class="price">$20.00</h4>
    </div>
    </div>
}

@code {
    private Product product = null;
    private string message = string.Empty;

    [Parameter]
    public int Id { get; set; }

    protected override async Task OnParametersSetAsync()
    {
        message = "Loading product...";
        var result = await ProductService.GetProduct(Id);

        if(!result.Success)
        {
            message = result.Message;
        } 
        else
        {
            product = result.Data;
        }

    }
}
